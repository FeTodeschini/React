{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\TaskTracker\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Header from './components/Header';\nimport Tasks from './components/Tasks';\nimport AddTask from './components/AddTask';\nimport Footer from './components/Footer';\nimport About from './components/About';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [showAddTask, setShowAddTask] = useState(false);\n  const [tasks, setTasks] = useState([]);\n\n  //Fetch Tasks from the JSON-Server (it simulates a real server using the tasks in the db.json file)\n  useEffect(() => {\n    const getTasks = async () => {\n      const tasksFromServer = await fetchTasks();\n      setTasks(tasksFromServer);\n    };\n    getTasks();\n  }, []);\n  const fetchTasks = async () => {\n    const res = await fetch('http://localhost:5000/tasks');\n    const data = await res.json();\n    return data;\n  };\n  const fetchTask = async id => {\n    const res = await fetch(`http://localhost:5000/tasks/${id}`);\n    const data = await res.json();\n    return data;\n  };\n\n  //Add Task\n  const addTask = async task => {\n    const res = await fetch('http://localhost:5000/tasks', {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(task)\n    });\n    const data = await res.json();\n    setTasks([...tasks, data]);\n  };\n\n  //Delete Task\n  const deleteTask = async id => {\n    await fetch(`http://localhost:5000/tasks/${id}`, {\n      method: 'DELETE'\n    });\n    setTasks(tasks.filter(task => task.id !== id));\n  };\n\n  //Toggle Reminder\n  const toggleReminder = async id => {\n    const taskToToggle = await fetchTask(id);\n    const updTask = {\n      ...taskToToggle,\n      reminder: !taskToToggle.reminder\n    };\n    const res = await fetch(`http://localhost:5000/tasks/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(updTask)\n    });\n    setTasks(tasks.map(task => task.id === id ? {\n      ...task,\n      reminder: !task.reminder\n    } : task));\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        title: \"Task Tracker\",\n        onAdd: () => setShowAddTask(!showAddTask),\n        showAdd: showAddTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), showAddTask && /*#__PURE__*/_jsxDEV(AddTask, {\n        onAdd: addTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 25\n      }, this), tasks.length > 0 ? /*#__PURE__*/_jsxDEV(Tasks, {\n        tasks: tasks,\n        onDelete: deleteTask,\n        onToggle: toggleReminder\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 31\n      }, this) : 'No Tasks to be Displayed', /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        component: About\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"pA4snfDjny2P+O1a+6NjXQ6HzBU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","BrowserRouter","Router","Route","Header","Tasks","AddTask","Footer","About","App","showAddTask","setShowAddTask","tasks","setTasks","getTasks","tasksFromServer","fetchTasks","res","fetch","data","json","fetchTask","id","addTask","task","method","headers","body","JSON","stringify","deleteTask","filter","toggleReminder","taskToToggle","updTask","reminder","map","length"],"sources":["C:/React/TaskTracker/src/App.js"],"sourcesContent":["import { useState, useEffect } from 'react'\nimport { BrowserRouter as Router, Route} from 'react-router-dom'\nimport Header from './components/Header'\nimport Tasks from './components/Tasks'\nimport AddTask from './components/AddTask'\nimport Footer from './components/Footer'\nimport About from './components/About'\n\nfunction App() {\n\n\n  const [showAddTask, setShowAddTask] = useState(false)\n  const [tasks, setTasks] = useState([])\n\n  //Fetch Tasks from the JSON-Server (it simulates a real server using the tasks in the db.json file)\n  useEffect(() => {\n    const getTasks = async () => {\n      const tasksFromServer = await fetchTasks()\n      setTasks(tasksFromServer)\n    }\n\n    getTasks()\n  }, [])\n  \n  const fetchTasks = async () => {\n    const res = await fetch('http://localhost:5000/tasks')\n    const data = await res.json()\n\n    return data\n  }\n\n  const fetchTask = async (id) => {\n    const res = await fetch(`http://localhost:5000/tasks/${id}`)\n    const data = await res.json()\n\n    return data\n  }\n\n   //Add Task\n  const addTask = async (task) => {\n    const res = await fetch('http://localhost:5000/tasks', {\n        method: 'POST',\n        headers: {\n          'Content-type': 'application/json'\n        },\n        body: JSON.stringify(task)\n      })\n    \n    const data = await res.json()\n\n    setTasks([...tasks, data])\n\n  }\n\n  //Delete Task\n  const deleteTask = async (id) => {\n    await fetch(`http://localhost:5000/tasks/${id}`, {\n      method: 'DELETE',\n    })\n\n    setTasks(tasks.filter((task) => task.id !== id))\n  }\n\n  //Toggle Reminder\n  const toggleReminder = async (id) => {\n    const taskToToggle = await fetchTask(id)\n    const updTask = {...taskToToggle, reminder: !taskToToggle.reminder}\n\n    const res = await fetch(`http://localhost:5000/tasks/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(updTask)\n    } )\n\n    setTasks(\n      tasks.map((task) => \n        task.id === id ? {...task, reminder: !task.reminder} : task\n      )\n    )\n  }\n\n  return (\n    <Router>\n      <div className=\"container\">\n        <Header title='Task Tracker' onAdd={() => setShowAddTask(!showAddTask)}\n          showAdd={showAddTask}/>\n        {showAddTask && <AddTask onAdd={addTask}/>}\n        {tasks.length > 0 ? ( <Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder}/> ) : ( 'No Tasks to be Displayed' )}\n        <Route path='/' component={About}/>\n          <Footer />\n      </div>\n    </Router>\n  )\n}\n\nexport default App\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}