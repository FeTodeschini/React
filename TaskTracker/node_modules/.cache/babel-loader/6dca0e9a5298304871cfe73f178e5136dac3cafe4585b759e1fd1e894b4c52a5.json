{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\TaskTracker\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport Header from './components/Header';\nimport Tasks from './components/Tasks';\nimport AddTask from './components/AddTask';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [showAddTask, setShowAddTask] = useState(false);\n  const [tasks, setTasks] = useState([]);\n\n  //Fetch Tasks from the JSON-Server (it simulates a real server using the tasks in the db.json file)\n  useEffect(() => {\n    const getTasks = async () => {\n      const tasksFromServer = await fetchTasks();\n      setTasks(tasksFromServer);\n    };\n    getTasks();\n  }, []);\n  const fetchTasks = async () => {\n    const res = await fetch('http://localhost:5000/tasks');\n    const data = await res.json();\n    return data;\n  };\n\n  //Add Task\n  const addTask = async task => {\n    const res = await fetch('http://localhost:5000/tasks', {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(task)\n    });\n    const id = Math.floor(Math.random() * 10000) + 1;\n    const newTask = {\n      id,\n      ...task\n    };\n    setTasks([...tasks, newTask]);\n  };\n\n  //Delete Task\n  const deleteTask = async id => {\n    await fetch(`http://localhost:5000/tasks/${id}`, {\n      method: 'DELETE'\n    });\n    setTasks(tasks.filter(task => task.id !== id));\n  };\n\n  //Toggle Reminder\n  const toggleReminder = id => {\n    setTasks(tasks.map(task => task.id === id ? {\n      ...task,\n      reminder: !task.reminder\n    } : task));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      title: \"Task Tracker\",\n      onAdd: () => setShowAddTask(!showAddTask),\n      showAdd: showAddTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), showAddTask && /*#__PURE__*/_jsxDEV(AddTask, {\n      onAdd: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 23\n    }, this), tasks.length > 0 ? /*#__PURE__*/_jsxDEV(Tasks, {\n      tasks: tasks,\n      onDelete: deleteTask,\n      onToggle: toggleReminder\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 27\n    }, this) : 'No Tasks to be Displayed']\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"pA4snfDjny2P+O1a+6NjXQ6HzBU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","Header","Tasks","AddTask","App","showAddTask","setShowAddTask","tasks","setTasks","getTasks","tasksFromServer","fetchTasks","res","fetch","data","json","addTask","task","method","headers","body","JSON","stringify","id","Math","floor","random","newTask","deleteTask","filter","toggleReminder","map","reminder","length"],"sources":["C:/React/TaskTracker/src/App.js"],"sourcesContent":["import { useState, useEffect } from 'react'\nimport Header from './components/Header'\nimport Tasks from './components/Tasks'\nimport AddTask from './components/AddTask'\n\nfunction App() {\n\n\n  const [showAddTask, setShowAddTask] = useState(false)\n  const [tasks, setTasks] = useState([])\n\n  //Fetch Tasks from the JSON-Server (it simulates a real server using the tasks in the db.json file)\n  useEffect(() => {\n    const getTasks = async () => {\n      const tasksFromServer = await fetchTasks()\n      setTasks(tasksFromServer)\n    }\n\n    getTasks()\n  }, [])\n  \n  const fetchTasks = async () => {\n    const res = await fetch('http://localhost:5000/tasks')\n    const data = await res.json()\n\n    return data\n  }\n\n   //Add Task\n  const addTask = async (task) => {\n    const res = await fetch('http://localhost:5000/tasks', {\n        method: 'POST',\n        headers: {\n          'Content-type': 'application/json'\n        },\n        body: JSON.stringify(task)\n      }\n    )\n\n    const id = Math.floor(Math.random() * 10000) + 1\n    const newTask = { id, ...task }\n    setTasks([...tasks, newTask])\n  }\n\n  //Delete Task\n  const deleteTask = async (id) => {\n    await fetch(`http://localhost:5000/tasks/${id}`, {\n      method: 'DELETE',\n    })\n\n    setTasks(tasks.filter((task) => task.id !== id))\n  }\n\n  //Toggle Reminder\n  const toggleReminder = (id) => {\n    setTasks(\n      tasks.map((task) => \n        task.id === id ? {...task, reminder: !task.reminder} : task\n      )\n    )\n  }\n\n  return (\n    <div className=\"container\">\n      <Header title='Task Tracker' onAdd={() => setShowAddTask(!showAddTask)}\n        showAdd={showAddTask}/>\n      {showAddTask && <AddTask onAdd={addTask}/>}\n      {tasks.length > 0 ? <Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder}/> : 'No Tasks to be Displayed'}\n    </div>\n  );\n}\n\nexport default App\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,OAAO,MAAM,sBAAsB;AAAA;AAE1C,SAASC,GAAG,GAAG;EAAA;EAGb,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;;EAEtC;EACAC,SAAS,CAAC,MAAM;IACd,MAAMS,QAAQ,GAAG,YAAY;MAC3B,MAAMC,eAAe,GAAG,MAAMC,UAAU,EAAE;MAC1CH,QAAQ,CAACE,eAAe,CAAC;IAC3B,CAAC;IAEDD,QAAQ,EAAE;EACZ,CAAC,EAAE,EAAE,CAAC;EAEN,MAAME,UAAU,GAAG,YAAY;IAC7B,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,6BAA6B,CAAC;IACtD,MAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAI,EAAE;IAE7B,OAAOD,IAAI;EACb,CAAC;;EAEA;EACD,MAAME,OAAO,GAAG,MAAOC,IAAI,IAAK;IAC9B,MAAML,GAAG,GAAG,MAAMC,KAAK,CAAC,6BAA6B,EAAE;MACnDK,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,IAAI;IAC3B,CAAC,CACF;IAED,MAAMM,EAAE,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAG,KAAK,CAAC,GAAG,CAAC;IAChD,MAAMC,OAAO,GAAG;MAAEJ,EAAE;MAAE,GAAGN;IAAK,CAAC;IAC/BT,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAEoB,OAAO,CAAC,CAAC;EAC/B,CAAC;;EAED;EACA,MAAMC,UAAU,GAAG,MAAOL,EAAE,IAAK;IAC/B,MAAMV,KAAK,CAAE,+BAA8BU,EAAG,EAAC,EAAE;MAC/CL,MAAM,EAAE;IACV,CAAC,CAAC;IAEFV,QAAQ,CAACD,KAAK,CAACsB,MAAM,CAAEZ,IAAI,IAAKA,IAAI,CAACM,EAAE,KAAKA,EAAE,CAAC,CAAC;EAClD,CAAC;;EAED;EACA,MAAMO,cAAc,GAAIP,EAAE,IAAK;IAC7Bf,QAAQ,CACND,KAAK,CAACwB,GAAG,CAAEd,IAAI,IACbA,IAAI,CAACM,EAAE,KAAKA,EAAE,GAAG;MAAC,GAAGN,IAAI;MAAEe,QAAQ,EAAE,CAACf,IAAI,CAACe;IAAQ,CAAC,GAAGf,IAAI,CAC5D,CACF;EACH,CAAC;EAED,oBACE;IAAK,SAAS,EAAC,WAAW;IAAA,wBACxB,QAAC,MAAM;MAAC,KAAK,EAAC,cAAc;MAAC,KAAK,EAAE,MAAMX,cAAc,CAAC,CAACD,WAAW,CAAE;MACrE,OAAO,EAAEA;IAAY;MAAA;MAAA;MAAA;IAAA,QAAE,EACxBA,WAAW,iBAAI,QAAC,OAAO;MAAC,KAAK,EAAEW;IAAQ;MAAA;MAAA;MAAA;IAAA,QAAE,EACzCT,KAAK,CAAC0B,MAAM,GAAG,CAAC,gBAAG,QAAC,KAAK;MAAC,KAAK,EAAE1B,KAAM;MAAC,QAAQ,EAAEqB,UAAW;MAAC,QAAQ,EAAEE;IAAe;MAAA;MAAA;MAAA;IAAA,QAAE,GAAG,0BAA0B;EAAA;IAAA;IAAA;IAAA;EAAA,QACnH;AAEV;AAAC,GAjEQ1B,GAAG;AAAA,KAAHA,GAAG;AAmEZ,eAAeA,GAAG;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}